{"version":3,"sources":["components/Statistic/Statistic.jsx","components/Buttons/Buttons.jsx","components/Feedback.jsx","App.jsx","index.js"],"names":["Statistic","states","labelsParagraph","Object","keys","map","label","className","Buttons","handler","labels","type","onClick","Feedback","state","good","neutral","bad","onButtonHandler","e","labelBtn","currentTarget","textContent","toLowerCase","setState","prevState","countTotalFeedback","values","reduce","acc","num","countPositiveFeedbackPercentage","Math","floor","this","btnLabels","feedbacksTotal","positivrFeedbacks","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAeeA,EAfG,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACbC,EAAkBC,OAAOC,KAAKH,GACpC,OACE,gCACE,2CACCC,EAAgBG,KAAI,SAAAC,GACnB,OACE,oBAAGC,UAAU,eAAb,UACGD,EADH,KACYL,EAAOK,GAASL,EAAOK,GAAS,IAD5C,UAAoCA,EAApC,eCWKE,EAlBC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,OAC1B,OACE,8BACGA,EAAOL,KAAI,SAAAC,GACV,OACE,wBACEC,UAAU,SACVI,KAAK,SACLC,QAASH,EAHX,SAMGH,GAFIA,SCuCFO,E,4MA3CbC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPC,gBAAkB,SAAAC,GAChB,IAAMC,EAAWD,EAAEE,cAAcC,YAAYC,cAC7C,EAAKC,UAAS,SAAAC,GACZ,OAAO,eAAGL,EAAWK,EAAUL,GAAY,O,EAG/CM,mBAAqB,WAEnB,OADkBvB,OAAOwB,OAAO,EAAKb,OACpBc,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAOC,IAAM,I,EAGtDC,gCAAkC,SAAChB,EAAME,GAEvC,OADmBe,KAAKC,MAAOlB,GAAQA,EAAOE,GAAQ,M,4CAGxD,WACE,MAA+BiB,KAAKpB,MAA5BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBkB,EAAYhC,OAAOC,KAAK8B,KAAKpB,OAC7BsB,EAAiBF,KAAKR,qBACtBW,EAAoBH,KAAKH,gCAAgChB,EAAME,GAErE,OACE,sBAAKV,UAAU,kBAAf,UACE,uDACA,cAAC,EAAD,CAASE,QAASyB,KAAKhB,gBAAiBR,OAAQyB,IAC/CC,EACC,cAAC,EAAD,CACEnC,OAAQ,CAAEc,OAAMC,UAASC,MAAKmB,iBAAgBC,uBAGhD,U,GArCaC,aCMRC,EARH,WACV,OACE,mCACE,cAAC,EAAD,OCANC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.54ba8316.chunk.js","sourcesContent":["const Statistic = ({ states }) => {\r\n  const labelsParagraph = Object.keys(states);\r\n  return (\r\n    <div>\r\n      <h3>Statistic</h3>\r\n      {labelsParagraph.map(label => {\r\n        return (\r\n          <p className=\"feedBackItem\" key={`${label}-id`}>\r\n            {label}: {states[label] ? states[label] : 0}\r\n          </p>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default Statistic;\r\n","const Buttons = ({ handler, labels }) => {\r\n  return (\r\n    <div>\r\n      {labels.map(label => {\r\n        return (\r\n          <button\r\n            className=\"button\"\r\n            type=\"button\"\r\n            onClick={handler}\r\n            key={label}\r\n          >\r\n            {label}\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default Buttons;\r\n","import { Component } from 'react';\r\nimport Statistic from 'components/Statistic/Statistic';\r\nimport Buttons from './Buttons/Buttons';\r\n\r\nclass Feedback extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  onButtonHandler = e => {\r\n    const labelBtn = e.currentTarget.textContent.toLowerCase();\r\n    this.setState(prevState => {\r\n      return { [labelBtn]: prevState[labelBtn] + 1 };\r\n    });\r\n  };\r\n  countTotalFeedback = () => {\r\n    const feedbacks = Object.values(this.state);\r\n    return feedbacks.reduce((acc, num) => (acc += num), 0);\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = (good, bad) => {\r\n    const persentage = Math.floor((good / (good + bad)) * 100);\r\n    return persentage;\r\n  };\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const btnLabels = Object.keys(this.state);\r\n    const feedbacksTotal = this.countTotalFeedback();\r\n    const positivrFeedbacks = this.countPositiveFeedbackPercentage(good, bad);\r\n\r\n    return (\r\n      <div className=\"feedBackService\">\r\n        <h2>Please leave feedback</h2>\r\n        <Buttons handler={this.onButtonHandler} labels={btnLabels} />\r\n        {feedbacksTotal ? (\r\n          <Statistic\r\n            states={{ good, neutral, bad, feedbacksTotal, positivrFeedbacks }}\r\n          />\r\n        ) : (\r\n          ''\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feedback;\r\n","import Feedback from 'components/Feedback';\n\nconst App = () => {\n  return (\n    <>\n      <Feedback />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}